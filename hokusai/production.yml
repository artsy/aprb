---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: aprb-web
spec:
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: aprb
        layer: application
        component: web
      name: aprb-web
      namespace: default
    spec:
      containers:
        - name: aprb-web
          env:
            - name: PORT
              value: "4000"
          envFrom:
            - configMapRef:
                name: aprb-environment
          image: 585031190124.dkr.ecr.us-east-1.amazonaws.com/aprb:production
          imagePullPolicy: Always
          ports:
            - name: aprb-http
              containerPort: 4000
          readinessProbe:
            httpGet:
              port: aprb-http
              path: /ping
              httpHeaders:
                - name: X-FORWARDED-PROTO
                  value: https
            initialDelaySeconds: 5
            periodSeconds: 15
            timeoutSeconds: 10
          resources:
            requests:
              cpu: 200m
              memory: 256Mi
            limits:
              memory: 500Mi
      dnsPolicy: ClusterFirst
      dnsConfig:
        options:
          - name: ndots
            value: "1"
      affinity:
        nodeAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 1
              preference:
                matchExpressions:
                  - key: tier
                    operator: In
                    values:
                      - foreground

---
apiVersion: autoscaling/v1
kind: HorizontalPodAutoscaler
metadata:
  name: aprb-web
  namespace: default
spec:
  scaleTargetRef:
    apiVersion: extensions/v1beta1
    kind: Deployment
    name: aprb-web
  minReplicas: 2
  maxReplicas: 6
  targetCPUUtilizationPercentage: 70

---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: aprb
    layer: application
    component: web
  name: aprb-web
  namespace: default
  annotations:
    service.beta.kubernetes.io/aws-load-balancer-ssl-cert: "arn:aws:iam::585031190124:server-certificate/2018-01-17_artsy-net-wildcard"
    service.beta.kubernetes.io/aws-load-balancer-backend-protocol: "http"
    service.beta.kubernetes.io/aws-load-balancer-ssl-ports: "443"
    service.beta.kubernetes.io/aws-load-balancer-cross-zone-load-balancing-enabled: "true"
    service.beta.kubernetes.io/aws-load-balancer-connection-draining-enabled: "true"
spec:
  ports:
    - port: 80
      targetPort: aprb-http
      protocol: TCP
  selector:
    app: aprb
    layer: application
    component: web
  sessionAffinity: None
  type: LoadBalancer
